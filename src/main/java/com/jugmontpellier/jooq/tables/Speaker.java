/**
 * This class is generated by jOOQ
 */
package com.jugmontpellier.jooq.tables;


import com.jugmontpellier.jooq.Keys;
import com.jugmontpellier.jooq.Public;
import com.jugmontpellier.jooq.tables.records.SpeakerRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Speaker extends TableImpl<SpeakerRecord> {

	private static final long serialVersionUID = 282864901;

	/**
	 * The reference instance of <code>public.SPEAKER</code>
	 */
	public static final Speaker SPEAKER = new Speaker();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SpeakerRecord> getRecordType() {
		return SpeakerRecord.class;
	}

	/**
	 * The column <code>public.SPEAKER.id_speaker</code>.
	 */
	public final TableField<SpeakerRecord, UUID> ID_SPEAKER = createField("id_speaker", org.jooq.impl.SQLDataType.UUID.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.SPEAKER.name_</code>.
	 */
	public final TableField<SpeakerRecord, String> NAME_ = createField("name_", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>public.SPEAKER.mail</code>.
	 */
	public final TableField<SpeakerRecord, String> MAIL = createField("mail", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>public.SPEAKER.twitter</code>.
	 */
	public final TableField<SpeakerRecord, String> TWITTER = createField("twitter", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>public.SPEAKER</code> table reference
	 */
	public Speaker() {
		this("SPEAKER", null);
	}

	/**
	 * Create an aliased <code>public.SPEAKER</code> table reference
	 */
	public Speaker(String alias) {
		this(alias, SPEAKER);
	}

	private Speaker(String alias, Table<SpeakerRecord> aliased) {
		this(alias, aliased, null);
	}

	private Speaker(String alias, Table<SpeakerRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SpeakerRecord> getPrimaryKey() {
		return Keys.SPEAKER_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SpeakerRecord>> getKeys() {
		return Arrays.<UniqueKey<SpeakerRecord>>asList(Keys.SPEAKER_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Speaker as(String alias) {
		return new Speaker(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Speaker rename(String name) {
		return new Speaker(name, null);
	}
}
