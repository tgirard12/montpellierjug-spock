/**
 * This class is generated by jOOQ
 */
package com.jugmontpellier.jooq.tables.daos;


import com.jugmontpellier.jooq.tables.Speaker;
import com.jugmontpellier.jooq.tables.records.SpeakerRecord;

import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpeakerDao extends DAOImpl<SpeakerRecord, com.jugmontpellier.jooq.tables.pojos.Speaker, UUID> {

	/**
	 * Create a new SpeakerDao without any configuration
	 */
	public SpeakerDao() {
		super(Speaker.SPEAKER, com.jugmontpellier.jooq.tables.pojos.Speaker.class);
	}

	/**
	 * Create a new SpeakerDao with an attached configuration
	 */
	public SpeakerDao(Configuration configuration) {
		super(Speaker.SPEAKER, com.jugmontpellier.jooq.tables.pojos.Speaker.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected UUID getId(com.jugmontpellier.jooq.tables.pojos.Speaker object) {
		return object.getIdSpeaker();
	}

	/**
	 * Fetch records that have <code>id_speaker IN (values)</code>
	 */
	public List<com.jugmontpellier.jooq.tables.pojos.Speaker> fetchByIdSpeaker(UUID... values) {
		return fetch(Speaker.SPEAKER.ID_SPEAKER, values);
	}

	/**
	 * Fetch a unique record that has <code>id_speaker = value</code>
	 */
	public com.jugmontpellier.jooq.tables.pojos.Speaker fetchOneByIdSpeaker(UUID value) {
		return fetchOne(Speaker.SPEAKER.ID_SPEAKER, value);
	}

	/**
	 * Fetch records that have <code>name_ IN (values)</code>
	 */
	public List<com.jugmontpellier.jooq.tables.pojos.Speaker> fetchByName_(String... values) {
		return fetch(Speaker.SPEAKER.NAME_, values);
	}

	/**
	 * Fetch records that have <code>mail IN (values)</code>
	 */
	public List<com.jugmontpellier.jooq.tables.pojos.Speaker> fetchByMail(String... values) {
		return fetch(Speaker.SPEAKER.MAIL, values);
	}

	/**
	 * Fetch records that have <code>twitter IN (values)</code>
	 */
	public List<com.jugmontpellier.jooq.tables.pojos.Speaker> fetchByTwitter(String... values) {
		return fetch(Speaker.SPEAKER.TWITTER, values);
	}
}
