/**
 * This class is generated by jOOQ
 */
package com.jugmontpellier.jooq;


import com.jugmontpellier.jooq.tables.Speaker;
import com.jugmontpellier.jooq.tables.Talk;
import com.jugmontpellier.jooq.tables.records.SpeakerRecord;
import com.jugmontpellier.jooq.tables.records.TalkRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<SpeakerRecord> SPEAKER_PKEY = UniqueKeys0.SPEAKER_PKEY;
	public static final UniqueKey<TalkRecord> TALK_PKEY = UniqueKeys0.TALK_PKEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<TalkRecord, SpeakerRecord> TALK__TALK_SPEAKER_FK_FKEY = ForeignKeys0.TALK__TALK_SPEAKER_FK_FKEY;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<SpeakerRecord> SPEAKER_PKEY = createUniqueKey(Speaker.SPEAKER, Speaker.SPEAKER.ID_SPEAKER);
		public static final UniqueKey<TalkRecord> TALK_PKEY = createUniqueKey(Talk.TALK, Talk.TALK.ID_TALK);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<TalkRecord, SpeakerRecord> TALK__TALK_SPEAKER_FK_FKEY = createForeignKey(com.jugmontpellier.jooq.Keys.SPEAKER_PKEY, Talk.TALK, Talk.TALK.SPEAKER_FK);
	}
}
